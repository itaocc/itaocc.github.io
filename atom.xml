<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>iTaocc</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-11-07T20:13:31.405Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>itaocc</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>开始使用Next[转发]</title>
    <link href="http://yoursite.com/2018/11/08/mine/"/>
    <id>http://yoursite.com/2018/11/08/mine/</id>
    <published>2018-11-07T19:53:15.000Z</published>
    <updated>2018-11-07T20:13:31.405Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;Hexo 是高效的静态站点生成框架，她基于 Node.js。 通过 Hexo 你可以轻松地使用 Markdown 编写文章，除了 Markdown 本身的语法之外，还可以使用 Hexo 提供的 标签插件 来快速的插入特定形式的内容。在这篇文章中，假定你已经成功安装了
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/11/08/hello-world/"/>
    <id>http://yoursite.com/2018/11/08/hello-world/</id>
    <published>2018-11-07T16:17:52.937Z</published>
    <updated>2018-11-07T16:17:52.938Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a
        
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>迭代器和生成器</title>
    <link href="http://yoursite.com/2018/01/10/2-%E8%BF%AD%E4%BB%A3%E5%99%A8%E5%92%8C%E7%94%9F%E6%88%90%E5%99%A8/"/>
    <id>http://yoursite.com/2018/01/10/2-迭代器和生成器/</id>
    <published>2018-01-10T04:50:15.000Z</published>
    <updated>2018-11-28T08:11:55.428Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;迭代器和生成器&quot;&gt;&lt;a href=&quot;#迭代器和生成器&quot; class=&quot;headerlink&quot; title=&quot;迭代器和生成器&quot;&gt;&lt;/a&gt;迭代器和生成器&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;迭代&lt;/strong&gt;: 访问集合元素的一种方式. 通常把使用for循环取数的过程称为遍历, 也叫迭代.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;可迭代对象&lt;/strong&gt;（Iterable）: 把可以通过for…in…这类语句迭代读取⼀条数据供我们使⽤的对象称之为可迭代对象.&lt;/p&gt;
    
    </summary>
    
      <category term="基础知识" scheme="http://yoursite.com/categories/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    
    
  </entry>
  
  <entry>
    <title>Django</title>
    <link href="http://yoursite.com/2018/01/08/Django%E7%99%BB%E5%BD%95%E6%8E%A5%E5%8F%A3/"/>
    <id>http://yoursite.com/2018/01/08/Django登录接口/</id>
    <published>2018-01-08T08:45:15.000Z</published>
    <updated>2018-11-28T07:57:55.536Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Django登录接口&lt;/p&gt;
    
    </summary>
    
      <category term="代码块" scheme="http://yoursite.com/categories/%E4%BB%A3%E7%A0%81%E5%9D%97/"/>
    
    
      <category term="接口" scheme="http://yoursite.com/tags/%E6%8E%A5%E5%8F%A3/"/>
    
  </entry>
  
  <entry>
    <title>flask注册接口</title>
    <link href="http://yoursite.com/2018/01/08/%E6%B3%A8%E5%86%8C%E6%8E%A5%E5%8F%A3/"/>
    <id>http://yoursite.com/2018/01/08/注册接口/</id>
    <published>2018-01-08T08:37:15.000Z</published>
    <updated>2018-11-28T07:57:16.142Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;flask中应用蓝图实现注册接口:&lt;/p&gt;
    
    </summary>
    
      <category term="代码块" scheme="http://yoursite.com/categories/%E4%BB%A3%E7%A0%81%E5%9D%97/"/>
    
    
      <category term="接口" scheme="http://yoursite.com/tags/%E6%8E%A5%E5%8F%A3/"/>
    
  </entry>
  
  <entry>
    <title>Flask代码框架</title>
    <link href="http://yoursite.com/2018/01/08/Flask%E4%BB%A3%E7%A0%81%E6%A1%86%E6%9E%B6/"/>
    <id>http://yoursite.com/2018/01/08/Flask代码框架/</id>
    <published>2018-01-08T07:37:15.000Z</published>
    <updated>2018-11-28T08:06:19.348Z</updated>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Flask代码框架&quot;&gt;&lt;a href=&quot;#Flask代码框架&quot; class=&quot;headerlink&quot; title=&quot;Flask代码框架&quot;&gt;&lt;/a&gt;Flask代码框架&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;文件及其目录&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Flask" scheme="http://yoursite.com/categories/Flask/"/>
    
    
      <category term="flask" scheme="http://yoursite.com/tags/flask/"/>
    
  </entry>
  
  <entry>
    <title>单例模式</title>
    <link href="http://yoursite.com/2018/01/08/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/"/>
    <id>http://yoursite.com/2018/01/08/单例模式/</id>
    <published>2018-01-08T07:37:15.000Z</published>
    <updated>2018-11-28T07:58:31.972Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;单例模式&quot;&gt;&lt;a href=&quot;#单例模式&quot; class=&quot;headerlink&quot; title=&quot;单例模式&quot;&gt;&lt;/a&gt;单例模式&lt;/h2&gt;&lt;p&gt;Python中类是通过&lt;strong&gt;new&lt;/strong&gt;来创建实例, 这个类从始至终只有一个实例, 用到&lt;code&gt;__new__&lt;/code&gt;方法&lt;/p&gt;
    
    </summary>
    
      <category term="代码块" scheme="http://yoursite.com/categories/%E4%BB%A3%E7%A0%81%E5%9D%97/"/>
    
    
      <category term="单例模式" scheme="http://yoursite.com/tags/%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
</feed>
